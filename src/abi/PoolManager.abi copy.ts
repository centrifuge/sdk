export default [
  'constructor(address escrow_, address vaultFactory_, address trancheFactory_)',
  'event AddAsset(uint128 indexed assetId, address indexed asset)',
  'event AddPool(uint64 indexed poolId)',
  'event AddTranche(uint64 indexed poolId, bytes16 indexed trancheId)',
  'event AllowAsset(uint64 indexed poolId, address indexed asset)',
  'event Deny(address indexed user)',
  'event DeployTranche(uint64 indexed poolId, bytes16 indexed trancheId, address indexed tranche)',
  'event DeployVault(uint64 indexed poolId, bytes16 indexed trancheId, address indexed asset, address vault)',
  'event DisallowAsset(uint64 indexed poolId, address indexed asset)',
  'event File(bytes32 indexed what, address data)',
  'event PriceUpdate(uint64 indexed poolId, bytes16 indexed trancheId, address indexed asset, uint256 price, uint64 computedAt)',
  'event Rely(address indexed user)',
  'event RemoveVault(uint64 indexed poolId, bytes16 indexed trancheId, address indexed asset, address vault)',
  'event TransferAssets(address indexed asset, address indexed sender, bytes32 indexed recipient, uint128 amount)',
  'event TransferTrancheTokens(uint64 indexed poolId, bytes16 indexed trancheId, address indexed sender, uint8 destinationDomain, uint64 destinationId, bytes32 destinationAddress, uint128 amount)',
  'function addAsset(uint128 assetId, address asset)',
  'function addPool(uint64 poolId)',
  'function addTranche(uint64 poolId, bytes16 trancheId, string name, string symbol, uint8 decimals, address hook)',
  'function allowAsset(uint64 poolId, uint128 assetId)',
  'function assetToId(address) view returns (uint128 assetId)',
  'function canTrancheBeDeployed(uint64 poolId, bytes16 trancheId) view returns (bool)',
  'function deny(address user)',
  'function deployTranche(uint64 poolId, bytes16 trancheId) returns (address)',
  'function deployVault(uint64 poolId, bytes16 trancheId, address asset) returns (address)',
  'function disallowAsset(uint64 poolId, uint128 assetId)',
  'function escrow() view returns (address)',
  'function file(bytes32 what, address data)',
  'function gasService() view returns (address)',
  'function gateway() view returns (address)',
  'function getTranche(uint64 poolId, bytes16 trancheId) view returns (address)',
  'function getTranchePrice(uint64 poolId, bytes16 trancheId, address asset) view returns (uint128 price, uint64 computedAt)',
  'function getVault_(uint64 poolId, bytes16 trancheId, uint128 assetId) view returns (address)',
  'function getVault(uint64 poolId, bytes16 trancheId, address asset) view returns (address)',
  'function getVaultAsset(address vault) view returns (address, bool)',
  'function handle(bytes message)',
  'function handleTransfer(uint128 assetId, address recipient, uint128 amount)',
  'function handleTransferTrancheTokens(uint64 poolId, bytes16 trancheId, address destinationAddress, uint128 amount)',
  'function idToAsset(uint128 assetId) view returns (address)',
  'function investmentManager() view returns (address)',
  'function isAllowedAsset(uint64 poolId, address asset) view returns (bool)',
  'function isPoolActive(uint64 poolId) view returns (bool)',
  'function recoverTokens(address token, address to, uint256 amount)',
  'function rely(address user)',
  'function removeVault(uint64 poolId, bytes16 trancheId, address asset)',
  'function trancheFactory() view returns (address)',
  'function transferAssets(address asset, bytes32 recipient, uint128 amount)',
  'function transferTrancheTokens(uint64 poolId, bytes16 trancheId, uint8 destinationDomain, uint64 destinationId, bytes32 recipient, uint128 amount)',
  'function updateRestriction(uint64 poolId, bytes16 trancheId, bytes update)',
  'function updateTrancheHook(uint64 poolId, bytes16 trancheId, address hook)',
  'function updateTrancheMetadata(uint64 poolId, bytes16 trancheId, string name, string symbol)',
  'function updateTranchePrice(uint64 poolId, bytes16 trancheId, uint128 assetId, uint128 price, uint64 computedAt)',
  'function vaultFactory() view returns (address)',
  'function wards(address) view returns (uint256)',
] as const
