export default [
  // 'function authTransferTo(address asset, uint256 tokenId, address receiver, uint256 amount)',
  // 'function availableBalanceOf(bytes16 scId, address asset, uint256 tokenId) view returns (uint128)',
  // 'function deny(address user)',
  // 'function deposit(bytes16 scId, address asset, uint256 tokenId, uint128 value)',
  'function holding(bytes16, address asset, uint256 tokenId) view returns (uint128 total, uint128 reserved)',
  // 'function poolId() view returns (uint64)',
  // 'function recoverTokens(address token, address receiver, uint256 amount)',
  // 'function recoverTokens(address token, uint256 tokenId, address receiver, uint256 amount)',
  // 'function rely(address user)',
  // 'function reserve(bytes16 scId, address asset, uint256 tokenId, uint128 value)',
  // 'function unreserve(bytes16 scId, address asset, uint256 tokenId, uint128 value)',
  // 'function wards(address) view returns (uint256)',
  // 'function withdraw(bytes16 scId, address asset, uint256 tokenId, uint128 value)',
  // 'event AuthTransferTo(address indexed asset, uint256 indexed tokenId, address receiver, uint256 value)',
  'event DecreaseReserve(address indexed asset, uint256 indexed tokenId, uint64 indexed poolId, bytes16 scId, uint256 delta, uint128 value)',
  // 'event Deny(address indexed user)',
  'event Deposit(address indexed asset, uint256 indexed tokenId, uint64 indexed poolId, bytes16 scId, uint128 value)',
  'event IncreaseReserve(address indexed asset, uint256 indexed tokenId, uint64 indexed poolId, bytes16 scId, uint256 delta, uint128 value)',
  // 'event ReceiveNativeTokens(address who, uint256 amount)',
  // 'event Rely(address indexed user)',
  'event Withdraw(address indexed asset, uint256 indexed tokenId, uint64 indexed poolId, bytes16 scId, uint128 value)',
  // 'error InsufficientBalance(address asset, uint256 tokenId, uint256 value, uint256 balance)',
  // 'error InsufficientDeposit()',
  // 'error InsufficientReservedAmount()',
  // 'error NoCode()',
  // 'error NotAuthorized()',
  // 'error SafeTransferEthFailed()',
  // 'error WrappedError(address target, bytes4 selector, bytes reason, bytes details)',
] as const
