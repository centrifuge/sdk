export default [
  // 'function BATCH_LOCATORS_SLOT() view returns (bytes32)',
  // 'function adapter() view returns (address)',
  // 'function blockOutgoing(uint16 centrifugeId, uint64 poolId, bool isBlocked)',
  // 'function deny(address user)',
  // 'function endBatching(address refund) payable',
  // 'function failedMessages(uint16 centrifugeId, bytes32 messageHash) view returns (uint256)',
  // 'function file(bytes32 what, address instance)',
  // 'function handle(uint16 centrifugeId, bytes batch)',
  // 'function isBatching() view returns (bool)',
  // 'function isOutgoingBlocked(uint16 centrifugeId, uint64) view returns (bool)',
  // 'function localCentrifugeId() view returns (uint16)',
  // 'function lockCallback()',
  // 'function manager(uint64, address) view returns (bool)',
  // 'function messageLimits() view returns (address)',
  // 'function pauser() view returns (address)',
  // 'function processor() view returns (address)',
  // 'function recoverTokens(address token, address receiver, uint256 amount)',
  // 'function recoverTokens(address token, uint256 tokenId, address receiver, uint256 amount)',
  // 'function rely(address user)',
  'function repay(uint16 centrifugeId, bytes batch, address refund) payable',
  'function retry(uint16 centrifugeId, bytes message)',
  // 'function send(uint16 centrifugeId, bytes message, uint128 extraGasLimit, address refund) payable',
  // 'function setUnpaidMode(bool enabled)',
  // 'function startBatching()',
  'function underpaid(uint16 centrifugeId, bytes32 batchHash) view returns (uint128 gasLimit, uint64 counter)',
  // 'function unpaidMode() view returns (bool)',
  // 'function updateManager(uint64 poolId, address who, bool canManage)',
  // 'function wards(address) view returns (uint256)',
  // 'function withBatch(bytes data, address refund) payable',
  // 'event BlockOutgoing(uint16 centrifugeId, uint64 poolId, bool isBlocked)',
  // 'event Deny(address indexed user)',
  // 'event DepositSubsidy(uint64 indexed poolId, address indexed sender, uint256 amount)',
  // 'event ExecuteMessage(uint16 indexed centrifugeId, bytes message, bytes32 messageHash)',
  // 'event FailMessage(uint16 indexed centrifugeId, bytes message, bytes32 messageHash, bytes error)',
  // 'event File(bytes32 indexed what, address addr)',
  // 'event PrepareMessage(uint16 indexed centrifugeId, uint64 poolId, bytes message)',
  // 'event Rely(address indexed user)',
  // 'event RepayBatch(uint16 indexed centrifugeId, bytes batch)',
  // 'event SetRefundAddress(uint64 poolId, address refund)',
  // 'event UnderpaidBatch(uint16 indexed centrifugeId, bytes batch, bytes32 batchHash)',
  // 'event UpdateManager(uint64 poolId, address who, bool canManage)',
  // 'event WithdrawSubsidy(uint64 indexed poolId, address indexed sender, uint256 amount)',
  // 'error AlreadyBatching()',
  // 'error CallFailedWithEmptyRevert()',
  // 'error CallbackIsLocked()',
  // 'error CallbackWasNotFromSender()',
  // 'error CallbackWasNotLocked()',
  // 'error CannotRefund()',
  // 'error EmptyMessage()',
  // 'error FileUnrecognizedParam()',
  // 'error MalformedBatch()',
  // 'error NoBatched()',
  // 'error NoCode()',
  // 'error NotAuthorized()',
  // 'error NotEnoughGas()',
  // 'error NotEnoughGasToProcess()',
  // 'error NotFailedMessage()',
  // 'error NotPayable()',
  // 'error NotUnderpaidBatch()',
  // 'error OutgoingBlocked()',
  // 'error Paused()',
  // 'error SafeTransferEthFailed()',
  // 'error SliceOutOfBounds()',
  // 'error SliceOverflow()',
  // 'error WrappedError(address target, bytes4 selector, bytes reason, bytes details)',
] as const
