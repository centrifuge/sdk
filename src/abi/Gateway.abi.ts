export default [
  // 'receive() external payable',
  // 'function BATCH_LOCATORS_SLOT() view returns (bytes32)',
  // 'function GLOBAL_POT() view returns (uint64)',
  // 'function adapter() view returns (address)',
  // 'function addUnpaidMessage(uint16 centrifugeId, bytes message)',
  // 'function deny(address user)',
  // 'function endBatching()',
  // 'function endTransactionPayment()',
  // 'function extraGasLimit() view returns (uint128)',
  // 'function failedMessages(uint16 centrifugeId, bytes32 messageHash) view returns (uint256)',
  // 'function file(bytes32 what, address instance)',
  // 'function fuel() view returns (uint256)',
  // 'function gasService() view returns (address)',
  // 'function handle(uint16 centrifugeId, bytes batch)',
  // 'function isBatching() view returns (bool)',
  // 'function processor() view returns (address)',
  // 'function recoverTokens(address token, address receiver, uint256 amount)',
  // 'function recoverTokens(address token, uint256 tokenId, address receiver, uint256 amount)',
  // 'function rely(address user)',
  'function repay(uint16 centrifugeId, bytes batch) payable',
  'function retry(uint16 centrifugeId, bytes message)',
  // 'function root() view returns (address)',
  // 'function send(uint16 centrifugeId, bytes message)',
  // 'function setExtraGasLimit(uint128 gas)',
  // 'function setRefundAddress(uint64 poolId, address refund)',
  // 'function startBatching()',
  // 'function startTransactionPayment(address payer) payable',
  // 'function subsidizePool(uint64 poolId) payable',
  // 'function subsidy(uint64) view returns (uint96 value, address refund)',
  // 'function transactionRefund() view returns (address)',
  // 'function underpaid(uint16 centrifugeId, bytes32 batchHash) view returns (uint128 counter, uint128 gasLimit)',
  // 'function wards(address) view returns (uint256)',
  // 'event Deny(address indexed user)',
  // 'event ExecuteMessage(uint16 indexed centrifugeId, bytes message)',
  // 'event FailMessage(uint16 indexed centrifugeId, bytes message, bytes error)',
  // 'event File(bytes32 indexed what, address addr)',
  // 'event PrepareMessage(uint16 indexed centrifugeId, uint64 poolId, bytes message)',
  // 'event Rely(address indexed user)',
  // 'event RepayBatch(uint16 indexed centrifugeId, bytes batch)',
  // 'event SetRefundAddress(uint64 poolId, address refund)',
  // 'event SubsidizePool(uint64 indexed poolId, address indexed sender, uint256 amount)',
  // 'event UnderpaidBatch(uint16 indexed centrifugeId, bytes batch)',
  // 'error EmptyMessage()',
  // 'error ExceedsMaxGasLimit()',
  // 'error FileUnrecognizedParam()',
  // 'error InsufficientFundsForRepayment()',
  // 'error InvalidMessage(uint8 code)',
  // 'error NoBatched()',
  // 'error NoCode()',
  // 'error NotAuthorized()',
  // 'error NotEnoughTransactionGas()',
  // 'error NotFailedMessage()',
  // 'error NotUnderpaidBatch()',
  // 'error Paused()',
  // 'error RefundAddressNotSet()',
  // 'error SafeTransferEthFailed()',
  // 'error SliceOutOfBounds()',
  // 'error SliceOverflow()',
  // 'error WrappedError(address target, bytes4 selector, bytes reason, bytes details)',
] as const
