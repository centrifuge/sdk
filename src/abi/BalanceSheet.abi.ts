export default [
  'function availableBalanceOf(uint64 poolId, bytes16 scId, address asset, uint256 tokenId) view returns (uint128)',
  // 'function deny(address user)',
  'function deposit(uint64 poolId, bytes16 scId, address asset, uint256 tokenId, uint128 amount)',
  // 'function escrow(uint64 poolId) view returns (address)',
  // 'function file(bytes32 what, address data)',
  // 'function gateway() view returns (address)',
  'function issue(uint64 poolId, bytes16 scId, address to, uint128 shares)',
  'function manager(uint64, address) view returns (bool)',
  // 'function multicall(bytes[] data) payable',
  // 'function noteDeposit(uint64 poolId, bytes16 scId, address asset, uint256 tokenId, uint128 amount)',
  // 'function overridePricePoolPerAsset(uint64 poolId, bytes16 scId, uint128 assetId, uint128 value)',
  // 'function overridePricePoolPerShare(uint64 poolId, bytes16 scId, uint128 value)',
  // 'function poolEscrowProvider() view returns (address)',
  // 'function queuedAssets(uint64 poolId, bytes16 scId, uint128 assetId) view returns (uint128 deposits, uint128 withdrawals)',
  // 'function queuedShares(uint64 poolId, bytes16 scId) view returns (uint128 delta, bool isPositive, uint32 queuedAssetCounter, uint64 nonce)',
  // 'function recoverTokens(address token, address receiver, uint256 amount)',
  // 'function recoverTokens(address token, uint256 tokenId, address receiver, uint256 amount)',
  // 'function rely(address user)',
  // 'function reserve(uint64 poolId, bytes16 scId, address asset, uint256 tokenId, uint128 amount)',
  // 'function resetPricePoolPerAsset(uint64 poolId, bytes16 scId, uint128 assetId)',
  // 'function resetPricePoolPerShare(uint64 poolId, bytes16 scId)',
  'function revoke(uint64 poolId, bytes16 scId, uint128 shares)',
  // 'function root() view returns (address)',
  // 'function sender() view returns (address)',
  // 'function spoke() view returns (address)',
  // 'function submitQueuedAssets(uint64 poolId, bytes16 scId, uint128 assetId, uint128 extraGasLimit)',
  // 'function submitQueuedShares(uint64 poolId, bytes16 scId, uint128 extraGasLimit)',
  // 'function transferSharesFrom(uint64 poolId, bytes16 scId, address sender_, address from, address to, uint256 amount)',
  // 'function unreserve(uint64 poolId, bytes16 scId, address asset, uint256 tokenId, uint128 amount)',
  // 'function updateManager(uint64 poolId, address who, bool canManage)',
  // 'function wards(address) view returns (uint256)',
  'function withdraw(uint64 poolId, bytes16 scId, address asset, uint256 tokenId, address receiver, uint128 amount)',
  // 'event Deny(address indexed user)',
  'event Deposit(uint64 indexed poolId, bytes16 indexed scId, address asset, uint256 tokenId, uint128 amount)',
  // 'event File(bytes32 indexed what, address data)',
  'event Issue(uint64 indexed poolId, bytes16 indexed scId, address to, uint128 pricePoolPerShare, uint128 shares)',
  'event NoteDeposit(uint64 indexed poolId, bytes16 indexed scId, address asset, uint256 tokenId, uint128 amount, uint128 pricePoolPerAsset)',
  // 'event Rely(address indexed user)',
  'event Revoke(uint64 indexed poolId, bytes16 indexed scId, address from, uint128 pricePoolPerShare, uint128 shares)',
  // 'event SubmitQueuedAssets(uint64 indexed poolId, bytes16 indexed scId, uint128 indexed assetId, (uint128 netAmount, bool isIncrease, bool isSnapshot, uint64 nonce) data, uint128 pricePoolPerAsset)',
  // 'event SubmitQueuedShares(uint64 indexed poolId, bytes16 indexed scId, (uint128 netAmount, bool isIncrease, bool isSnapshot, uint64 nonce) data)',
  // 'event TransferSharesFrom(uint64 indexed poolId, bytes16 indexed scId, address sender, address indexed from, address to, uint256 amount)',
  // 'event UpdateManager(uint64 indexed poolId, address who, bool canManage)',
  'event Withdraw(uint64 indexed poolId, bytes16 indexed scId, address asset, uint256 tokenId, address receiver, uint128 amount, uint128 pricePoolPerAsset)',
  // 'error CallFailedWithEmptyRevert()',
  // 'error CannotTransferFromEndorsedContract()',
  // 'error FileUnrecognizedParam()',
  // 'error NoCode()',
  // 'error NotAuthorized()',
  // 'error SafeTransferEthFailed()',
  // 'error UnauthorizedSender()',
  // 'error WrappedError(address target, bytes4 selector, bytes reason, bytes details)',
] as const
